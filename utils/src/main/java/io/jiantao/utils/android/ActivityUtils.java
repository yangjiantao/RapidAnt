package io.jiantao.utils.android;import android.app.Activity;import android.content.Context;import android.content.ContextWrapper;import android.content.Intent;import android.content.pm.PackageManager;import android.content.pm.ResolveInfo;import android.os.Build;import androidx.annotation.NonNull;import java.util.List;/** * Created by Jiantao.Yang on 2019-12-17. */public class ActivityUtils {    /**     * Return the activity by context.     *     * @param context The context.     * @return the activity by context.     */    public static Activity getActivityByContext(Context context) {        if (context instanceof Activity) return (Activity) context;        while (context instanceof ContextWrapper) {            if (context instanceof Activity) {                return (Activity) context;            }            context = ((ContextWrapper) context).getBaseContext();        }        return null;    }    /**     * Return whether the activity is destroyed.     *     * @return {@code true}: yes<br>{@code false}: no     */    public static boolean isActivityDestroyed(Activity activity) {        if (activity == null) {            return true;        }        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1 ? activity.isDestroyed() : activity.isFinishing();    }    /**     * Return the name of launcher activity.     *     * @param pkg The name of the package.     * @return the name of launcher activity     */    public static String getLauncherActivity(@NonNull Context context, final String pkg) {        Intent intent = new Intent(Intent.ACTION_MAIN, null);        intent.addCategory(Intent.CATEGORY_LAUNCHER);        intent.setPackage(pkg);        PackageManager pm = context.getPackageManager();        List<ResolveInfo> info = pm.queryIntentActivities(intent, 0);        ResolveInfo next = info.iterator().next();        if (next != null) {            return next.activityInfo.name;        }        return "no launcher activity of " + pkg;    }}