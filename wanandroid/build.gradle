apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 指定test源代码
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    options.links "https://xxx.com"
    failOnError false
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':utils')

    // architecture components or libraries
    implementation "androidx.fragment:fragment:$rootProject.androidxFragmentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.androidxLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$rootProject.androidxLifecycleVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.androidxRoomVersion"
    implementation "androidx.room:room-runtime:$rootProject.androidxRoomVersion"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.androidxSupportv4Version"
    implementation "androidx.appcompat:appcompat:$rootProject.androidxAppcompatVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardViewVersion"

    // Android Testing Support Library's runner and rules
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.supportTestRunnerVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.androidxArchCoreTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.androidxArchCoreTestingVersion"
    implementation "androidx.room:room-testing:$rootProject.androidxRoomTestingVersion"

    //mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"

    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.mockwebserverVersion"

    testImplementation "com.google.truth:truth:$rootProject.googleTruthVersion"
    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}
